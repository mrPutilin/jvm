
public class JvmComprehension {  // С момента запуска программы класс JvmComprehension подгружается в подистему загрузчиков классов начиная с Application Classloader,
                                // и пробрасывается дальше по Platform Classloader и Bootstrap Classloader где проходит проверку на наличие в одной из подсистем.
                                // Далее после загрузки классов идет связываение где происходит подготовка классов к выполнению которая включает в себя 3 стадии: Verify, Prepare, Resolve.
                                // Если класс найден в ClassLoader то дальше информация о нем имя, методы, поля, константы загружаются в область памяти Metaspace.
                                // так же в этой обасти хранятся системные классы.


    public static void main(String[] args) { // В момент вызова метода в Stack создается фрейм.
        int i = 1;                      // 1 переменная попадает в этот фрейм в стеке и хранится там.
        Object o = new Object();        // 2 сам объект Object попадает в heap, а переменная о (ссылка на него) попадает в стек
        Integer ii = 2;                 // 3 2 попадате в heap, а ii в stack.
        printAll(o, i, ii);             // 4 в stack появлятеся еще один фрейм, в этот фрейм попадают примитивные данные i и ссылки на объекты, сами объекты уже находятся в куче
        System.out.println("finished"); // 7 в стеке создается пустой фрейм, finished попадает в кучу
                                        // по завершению этого метода все созданные фреймы и данные в них удаляются в порядке LIFO.
                                        // Сборка мусора производится по усмотрению java обходом граф достижимых объектов,
                                        // недостижимы объекты удаляются, а достижимые группируются по времени жизни.
    }

    private static void printAll(Object o, int i, Integer ii) {
        Integer uselessVar = 700;                   // 5 объект 700 попадает в кучу, uselessVar в стэк.
        System.out.println(o.toString() + i + ii);  // 6 тут в стэке создаются еще два фрейма, один под метод .println куда попадают i и ссылка ii и один фрейм под метод toString

    }
}
